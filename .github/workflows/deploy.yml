name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "github-pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "23"
      
      - name: Debug Environment
        working-directory: ./frontend
        run: |
          echo "=== ENVIRONMENT DEBUGGING ==="
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "Working directory: $(pwd)"
          echo "Home directory: $HOME"
          echo "PATH: $PATH"
          echo ""
          echo "=== DIRECTORY CONTENTS ==="
          ls -la
          echo ""
          echo "=== PACKAGE.JSON ==="
          cat package.json
          echo ""
          echo "=== TSCONFIG.JSON ==="
          cat tsconfig.json
          echo ""
          echo "=== ESLINT CONFIG ==="
          cat eslint.config.mjs
          echo ""
          echo "=== SRC DIRECTORY STRUCTURE ==="
          find src -type f -name "*.ts" -o -name "*.tsx" | head -20
      
      - name: Install dependencies
        working-directory: ./frontend
        run: |
          echo "=== INSTALLING DEPENDENCIES ==="
          npm ci
          echo ""
          echo "=== DEPENDENCY CHECK ==="
          npm ls tailwindcss autoprefixer postcss
          echo ""
          echo "=== ALL DEPENDENCIES ==="
          npm ls --depth=0
          echo ""
          echo "=== DEV DEPENDENCIES CHECK ==="
          npm ls --only=dev --depth=0 || echo "No dev dependencies found"
      
      - name: Debug TypeScript Setup
        working-directory: ./frontend
        run: |
          echo "=== TYPESCRIPT DEBUGGING ==="
          echo "Looking for TypeScript binary..."
          ls -la node_modules/.bin/ | grep tsc || echo "tsc not found in node_modules/.bin/"
          echo ""
          echo "Checking node_modules for typescript:"
          ls -la node_modules/ | grep typescript || echo "typescript not found"
          echo ""
          echo "Trying different TypeScript access methods:"
          echo "Method 1 - Direct binary:"
          ./node_modules/.bin/tsc --version 2>/dev/null || echo "Direct binary failed"
          echo "Method 2 - npx tsc:"
          npx tsc --version 2>/dev/null || echo "npx tsc failed"  
          echo "Method 3 - npm run (if tsc script exists):"
          npm run tsc --version 2>/dev/null || echo "npm run tsc failed"
      
      - name: Run ESLint with Debugging
        working-directory: ./frontend
        continue-on-error: true
        run: |
          echo "=== ESLINT DEBUGGING ==="
          echo "ESLint version:"
          npx eslint --version
          echo ""
          echo "ESLint config test:"
          npx eslint --print-config src/app/page.tsx
          echo ""
          echo "Running ESLint with maximum detail:"
          npx eslint . --ext .ts,.tsx --max-warnings 0 --format detailed
          echo ""
          echo "ESLint exit code: $?"
      
      - name: Run TypeScript Type Check with Debugging
        working-directory: ./frontend
        continue-on-error: true
        run: |
          echo "=== TYPESCRIPT TYPE CHECK DEBUGGING ==="
          echo "Running TypeScript compiler with no emit:"
          npx tsc --noEmit --pretty || echo "TypeScript type check failed with exit code $?"
          echo ""
          echo "Checking for any .d.ts files:"
          find . -name "*.d.ts" | head -10
      
      - name: Run Next.js Lint
        working-directory: ./frontend
        continue-on-error: true
        run: |
          echo "=== NEXT.JS LINT DEBUGGING ==="
          echo "Running Next.js lint:"
          npm run lint -- --max-warnings 0
          echo "Next.js lint exit code: $?"
      
      - name: Debug Import Issues
        working-directory: ./frontend
        run: |
          echo "=== IMPORT DEBUGGING ==="
          echo "Checking for import issues in key files:"
          echo ""
          echo "=== LAYOUT.TSX ==="
          cat src/app/layout.tsx
          echo ""
          echo "=== PAGE.TSX ==="
          cat src/app/page.tsx
          echo ""
          echo "=== NAVIGATION.TSX ==="
          cat src/components/Navigation.tsx
          echo ""
          echo "=== ACTIVE SECTION CONTEXT ==="
          cat src/context/active-section-context.tsx
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build with Next.js (with debugging)
        working-directory: ./frontend
        run: |
          echo "=== NEXT.JS BUILD DEBUGGING ==="
          echo "Starting Next.js build..."
          npm run build
          echo "Build exit code: $?"
          echo ""
          echo "=== BUILD OUTPUT DIRECTORY ==="
          ls -la out/
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 